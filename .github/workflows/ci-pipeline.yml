name: CI Pipeline

on:
  push:
    branches:
      - 'feature/**'  # Trigger on commits to feature branches
  pull_request:
    branches:
      - main

jobs:
  linting:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Check .editorconfig
        uses: editorconfig-checker/editorconfig-checker
        
      - name: Run pylint
        run: |
          pip install pylint
          pylint app/app.py

      - name: Run black for code formatting
        run: |
          pip install black
          black --check app

      - name: Lint Markdown files
        uses: davidanson/markdownlint-cli2-action@v1
        with:
          config_path: .markdownlint.json

  testing:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install dependencies
        run: |
          pip install -r app/requirements.txt

      - name: Run unit tests
        run: |
          python -m unittest app/app_test.py

  security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Run gitleaks for secrets scanning
        uses: zricethezav/gitleaks-action@v1

      - name: Run SonarCloud SAST
        uses: SonarSource/sonarcloud-github-action@master
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.projectKey=YourProjectKey
            -Dsonar.organization=YourOrg

      - name: Run Snyk for dependency security scan
        uses: snyk/actions@v1
        with:
          args: test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/flask-app:$IMAGE_TAG .

      - name: Scan Docker image with Trivy
        uses: aquasecurity/trivy-action@v0.3.1
        with:
          image-ref: ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}
        id: trivy

      - name: Push Docker image to Docker Hub
        if: steps.trivy.outputs.vulnerabilities != 'CRITICAL'  # Only push if no critical vulnerabilities
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/flask-app:${{ github.sha }}

